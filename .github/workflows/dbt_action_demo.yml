# name: workflows migration prd
# concurrency: "1"
# on:
#   push:
#     branches:
#       - promote_workflows_prd
#     paths:
#       - "**/*.yml"
#       - "**/*.py"
# jobs:
#   deploy:
#     name: "Deploy bundle"
#     runs-on: ubuntu-latest
#     environment: prd
#     steps:
#       - uses: actions/checkout@v3
#       - uses: databricks/setup-cli@main
#       - run: databricks bundle deploy
#         working-directory: .
#         env:
#           DATABRICKS_TOKEN: ${{ secrets.DAB_SECRET }}
#           DATABRICKS_BUNDLE_ENV: prd
#
#   pipeline_update:
#     name: "Run pipeline update"
#     runs-on: ubuntu-latest
#     needs:
    #   - deploy
    # if: github.ref == 'refs/heads/promote_workflows_prd'  
#  
#       - uses: databricks/setup-cli@main
#       # - shell: bash
#       #   name: Run pipeline update
#       #   run: |
#       #     set -o pipefail
#       #     databricks bundle run dab_kontest_job --refresh-all 2>&1 | tee output.log
#       #   env:
#       #     DATABRICKS_TOKEN: ${{ secrets.DAB_SECRET }}
#       #     DATABRICKS_BUNDLE_ENV: dev
# name: hello-world
# on: push
# jobs:
#   my-job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: my-step
#         run: echo "Hello World!"
name: workflows migration dev
concurrency: "1"
on:
  push:
    branches:
      - main
    paths:
      - "**/*.yml"

jobs:
  test:
    name: "automated testing"
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Databricks CLI
        uses: databricks/setup-cli@main
      - name: Trigger Databricks testing job
        id: test-job

        run: |
            job_id="63243543003442"  # Replace with your testing job ID
            response=$(databricks jobs run-now $job_id)
            run_id=$(echo $response | jq -r '.run_id')
            echo "Test job run ID: $run_id"
            echo "::set-output name=run_id::$run_id"
        working-directory: .
        env:
            DATABRICKS_TOKEN: ${{secrets.DAB_SECRET}}
            DATABRICKS_BUNDLE_ENV: dev

  deploy:
              needs: test
              runs-on: ubuntu-latest
              if: success()  # This ensures deploy runs only if the test job was successful
              environment: dev
              steps:
              - name: Checkout code
                uses: actions/checkout@v3

              - name: Set up Databricks CLI
                uses: databricks/setup-cli@main
                
              - name: Trigger Databricks bundle deploy job
                run:  databricks bundle deploy
                working-directory: .
                env:
                    DATABRICKS_TOKEN: ${{secrets.DAB_SECRET}}
                    DATABRICKS_BUNDLE_ENV: dev